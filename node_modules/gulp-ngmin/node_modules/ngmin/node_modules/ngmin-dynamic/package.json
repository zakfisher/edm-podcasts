{
  "name": "ngmin-dynamic",
  "version": "0.0.1",
  "description": "annotate angular apps using this one weird trick",
  "author": {
    "name": "Brian Ford"
  },
  "license": "MIT",
  "main": "dynamic.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha --harmony test/"
  },
  "keywords": [
    "ngmin",
    "angular",
    "angularjs",
    "minification"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/btford/ngmin-dynamic"
  },
  "devDependencies": {
    "should": "^3.2.0",
    "esprima": "^1.1.1",
    "escodegen": "^1.3.0",
    "mocha": "^1.18.2"
  },
  "readme": "# ngmin-dynamic [![Build Status](https://travis-ci.org/btford/ngmin-dynamic.svg?branch=master)](https://travis-ci.org/btford/ngmin-dynamic)\n\nUses a dynamic analysis technique to provide DI annotations for AngularJS.\n\n**Note:** This is pretty new so it might have some bugs.\n\nSee [ngmin](https://github.com/btford/ngmin)\n\n## API\n\nIt's just a single function that takes some code as a string and returns the string but annotated.\n\n```javascipt\nvar ngmin = require('ngmin-dynamic');\n\nvar annotated = ngmin('some code as a string');\n```\n\n## License\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/btford/ngmin-dynamic/issues"
  },
  "homepage": "https://github.com/btford/ngmin-dynamic",
  "_id": "ngmin-dynamic@0.0.1",
  "_from": "ngmin-dynamic@~0.0.1"
}
